apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.videodemo"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 配置.so文件
        ndk {
            // 选择要添加的对应的cpu类型的.so库  要先读取armeabi-v7a  不然会报app:transformClassesAndResourcesWithProguardForBaiDuDebug'.> Job failed, see
            //也有可能是依赖重复的问题
            abiFilters 'armeabi-v7a', 'armeabi-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

//    implementation project(':AliyunRecorder:record_demo')
    implementation externalAliyunOSS
//    implementation files('src/main/libs/aliyun-oss-sdk-android-2.3.0.jar')
    implementation 'com.aliyun.video.android:svideopro:3.11.0'//短视频专业版SDK必须依赖
    implementation 'com.aliyun.video.android:core:1.2.1' //核心库必须依赖
    implementation  'com.alivc.conan:AlivcConan:0.9.5.1'//核心库必须依赖
    implementation  'com.aliyun.video.android:AlivcSvideoFFmpeg:1.0.1'//必须依赖
    implementation  'com.aliyun.video.android:upload:1.5.3'// 上传库,如不需要上传可不依赖


}
